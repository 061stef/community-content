- title: Set default file upload provider as Cloudinary
  url: https://medium.com/@kwinten.yc.li/strapi-set-default-file-upload-provider-to-s3-cloudinary-rackspace-5b8ef6f61daa
  source: https://medium.com/
  description: Programmatically set the default file upload provider in different environment, this article talks about Cloudinary specifically as an example
  categories:
    - Feature
  written_by: Kwinten Li
  written_by_url: https://github.com/kwinyyyc
- title: How to run a Strapi dev stack with Docker compose
  url: https://strapi.io/blog/how-to-run-a-strapi-dev-stack-with-docker-compose
  source: https://strapi.io/
  description: Strapi has great documentation, and includes pointers on Installing Strapi using Docker. By completing this tutorial, we're going to enjoy the experience of seeing how simple that really is, and what it feels like to have Docker Compose your workday as part of our regular development process.
  categories:
    - Docker
    - Docker compose
    - MongoDB
  written_by: Victor Kane
  written_by_url: https://twitter.com/AWebFactory
- title: The power of Strapi
  url: https://medium.com/codechem/the-power-of-strapi-6339ee55b35a
  source: https://medium.com/
  description: In this article, we are going to build a simple web application using Strapi and Angular.
  categories:
    - Angular
  written_by: Stefan Sheva Popovski
  written_by_url: https://medium.com/@stefansheva
- title: Audit Log/Trail with Strapi
  url: https://medium.com/@adenleabbey/audit-log-trail-with-strapi-74f6bdf70daf
  source: https://medium.com/
  description: This article is about creating an Audit log or trail for a Strapi Application using strapi middleware. This will enable the admin to see all requests to API routes and all other activities which include Admin page visits and all CRUD done. This will also cover visibility to public API calls by unauthenticated users.
  categories:
    - Audit log
    - Audit Trail
    - Logs
  written_by: Adenle Abiodun
  written_by_url: https://medium.com/@adenleabbey
  
  - title: Triggering a deploy in Netlify automatically after updating content in Strapi.
  url: https://chriswray.dev/posts/triggering-a-deploy-in-netlify-automatically-after-updating-content-in-strapi
  source: https://chriswray.dev
  description: Netlify offers a feature called "Build hooks". These are unique URLs that you can configure for your application to trigger deployments automatically whenever a post request is made to that endpoint. With Strapi, Build hooks are incredibly easy to integrate.
  categories:
    - Webhooks
  written_by: Chris Wray
  written_by_url: https://chriswray.dev
